{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isTitleCorrect","isDescriptionCorrect","isImgUrlCorrect","isImdbUrlCorrect","isImdbIdCorrect","clearForm","setState","changeHandler","event","target","name","value","blurHandler","validateData","toUpperCase","slice","length","test","createFilm","submitForm","preventDefault","isFormValid","props","onAdd","this","onSubmit","type","placeholder","onChange","onBlur","ClassNames","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0e1a7f0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    isTitleCorrect: true,\n    description: '',\n    isDescriptionCorrect: true,\n    imgUrl: '',\n    isImgUrlCorrect: true,\n    imdbUrl: '',\n    isImdbUrlCorrect: true,\n    imdbId: '',\n    isImdbIdCorrect: true,\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  blurHandler = (event) => {\n    const { name } = event.target;\n\n    if (this.validateData(name)) {\n      this.setState(\n        { [`is${name[0].toUpperCase() + name.slice(1)}Correct`]: true },\n      );\n    } else {\n      this.setState(\n        { [`is${name[0].toUpperCase() + name.slice(1)}Correct`]: false },\n      );\n    }\n  }\n\n  validateData = (name) => {\n    // eslint-disable-next-line\n    const regexTester = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    const value = this.state[name];\n\n    if (name === 'description') {\n      return true;\n    }\n\n    if (value.length < 4) {\n      return false;\n    }\n\n    if (name === 'imdbUrl' || name === 'imgUrl') {\n      return regexTester.test(value);\n    }\n\n    return true;\n  }\n\n  createFilm = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n  };\n\n  submitForm = (event) => {\n    event.preventDefault();\n\n    let isFormValid = true;\n\n    if (!this.validateData('title')) {\n      isFormValid = false;\n      this.setState({ isTitleCorrect: false });\n    }\n\n    if (!this.validateData('description')) {\n      isFormValid = false;\n      this.setState({ isDescriptionCorrect: false });\n    }\n\n    if (!this.validateData('imgUrl')) {\n      isFormValid = false;\n      this.setState({ isImgUrlCorrect: false });\n    }\n\n    if (!this.validateData('imdbUrl')) {\n      isFormValid = false;\n      this.setState({ isImdbUrlCorrect: false });\n    }\n\n    if (!this.validateData('imdbId')) {\n      isFormValid = false;\n      this.setState({ isImdbIdCorrect: false });\n    }\n\n    if (isFormValid) {\n      this.clearForm();\n      this.props.onAdd(this.createFilm());\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isTitleCorrect,\n      isDescriptionCorrect,\n      isImgUrlCorrect,\n      isImdbUrlCorrect,\n      isImdbIdCorrect,\n    } = this.state;\n\n    return (\n      <>\n        <h2 className=\"add-movie__header\">\n          Add New Movie\n        </h2>\n\n        <form\n          onSubmit={this.submitForm}\n        >\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={this.changeHandler}\n            onBlur={this.blurHandler}\n            className={ClassNames('input', { 'wrong-input': !isTitleCorrect })}\n          />\n\n          {isTitleCorrect || (\n            <div className=\"error-message\">Incorrect title</div>\n          )}\n\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Enter description\"\n            value={description}\n            onChange={this.changeHandler}\n            onBlur={this.blurHandler}\n            className={ClassNames(\n              'input', { 'wrong-input': !isDescriptionCorrect },\n            )}\n          />\n\n          {isDescriptionCorrect || (\n            <div className=\"error-message\">Incorrect description</div>\n          )}\n\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"Enter image Url\"\n            value={imgUrl}\n            onChange={this.changeHandler}\n            onBlur={this.blurHandler}\n            className={ClassNames('input', { 'wrong-input': !isImgUrlCorrect })}\n          />\n\n          {isImgUrlCorrect || (\n            <div className=\"error-message\">Incorrect image Url</div>\n          )}\n\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"Enter IMDB Url\"\n            value={imdbUrl}\n            onChange={this.changeHandler}\n            onBlur={this.blurHandler}\n            className={ClassNames(\n              'input', { 'wrong-input': !isImdbUrlCorrect },\n            )}\n          />\n\n          {isImdbUrlCorrect || (\n            <div className=\"error-message\">Incorrect IMBD Url</div>\n          )}\n\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"Enter IMDB Id\"\n            value={imdbId}\n            onChange={this.changeHandler}\n            onBlur={this.blurHandler}\n            className={ClassNames('input', { 'wrong-input': !isImdbIdCorrect })}\n          />\n\n          {isImdbIdCorrect || (\n            <div className=\"error-message\">Incorrect IMBD Id</div>\n          )}\n\n          <button\n            type=\"submit\"\n            className={ClassNames('button')}\n          >\n            Add film\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}