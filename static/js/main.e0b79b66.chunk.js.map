{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","clearForm","setState","changeHandler","event","target","name","value","createFilm","onAdd","this","props","onSubmit","preventDefault","type","placeholder","onChange","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0b79b66.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  createFilm = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n  };\n\n  render() {\n    const { onAdd } = this.props;\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <>\n        <h2 className=\"add-movie__header\">\n          Add New Movie\n        </h2>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            this.clearForm();\n            onAdd(this.createFilm());\n          }}\n        >\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={this.changeHandler}\n            className=\"input\"\n          />\n\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Enter description\"\n            value={description}\n            onChange={this.changeHandler}\n            className=\"input\"\n          />\n\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"Enter image Url\"\n            value={imgUrl}\n            onChange={this.changeHandler}\n            className=\"input\"\n          />\n\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"Enter IMDB Url\"\n            value={imdbUrl}\n            onChange={this.changeHandler}\n            className=\"input\"\n          />\n\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"Enter IMDB Id\"\n            value={imdbId}\n            onChange={this.changeHandler}\n            className=\"input\"\n          />\n\n          <button\n            type=\"submit\"\n            className=\"button\"\n          >\n            Add film\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}